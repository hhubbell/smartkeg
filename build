#!/bin/bash

PKG_PATH="/usr/lib/python2.7/site-packages"
BIN_PATH="/usr/local/bin"
SRV_PATH="/srv/smartkeg"
CFG_PATH="/etc/smartkeg"
LOG_PATH="/var/log/smartkeg"

PKG_MGR="pacman"
PKG_INSTALL="-S"
PKG_QUERY="-Qs"

RESET="\033[0m"
BOLD="\033[1m"
RED="\033[0;31m"
GREEN="\033[0;32m"
BLUE="\033[1;34m"

DEP_OK="${GREEN}OK${RESET}"
DEP_NO="${RED}NO${RESET}"
DEP_PASS=true
DEP_NEED=()

nocheck="--no-check"
nodb="--no-db"
nogui="--no-gui"
minify="--minify"

echo -e "\n${BOLD}Welcome to the Smartkeg build process!${RESET}"

if ! echo $@ | grep -e $nocheck > /dev/null;
then
    echo -e "${BLUE}=>${RESET} Checking Dependencies\n"
    echo -ne "\tMySQL/MariaDB   "
    # MySQL/MariaDB
    if command -v mysql > /dev/null;
    then
        echo -e $DEP_OK
    else
        DEP_PASS=false
        DEP_NEED+=('mysql')
        echo -e $DEP_NO
    fi

    # python-mysql
    echo -ne "\tpython-mysql    "
    if $PKG_MGR $PKG_QUERY mysql-python > /dev/null;
    then
        echo -e $DEP_OK
    else
        DEP_PASS=false
        DEP_NEED+=('mysql-python')
        echo -e $DEP_NO
    fi

    # RPi.GPIO
    # This requires pip, unless the user builds from source.
    echo -ne "\tRPi.GPIO        "
    if pip2 list | grep RPi.GPIO > /dev/null;
    then
        echo -e $DEP_OK
    else
        DEP_PASS=false
        echo -ne $DEP_NO
        echo -e "    ${BOLD}NOTICE:${RESET} RPi.GPIO must be installed using pip or built from source.  You must complete this step yourself."
    fi

    # qrcode
    # This also requires pip, unless the user builds from source.
    echo -ne "\tqrcode          "
    if pip2 list | grep qrcode > /dev/null;
    then
        echo -e $DEP_OK
    else
        DEP_PASS=false
        echo -ne $DEP_NO
        echo -e "    ${BOLD}NOTICE:${RESET} qrcode must be installed using pip or built from source.  You must complete this step yourself."
    fi


    # pywebkitgtk
    if ! echo $@ | grep -e $nogui > /dev/null;
    then
        echo -ne "\tpywebkitgtk     "
        if $PKG_MGR $PKG_QUERY pywebkitgtk > /dev/null;
        then
            echo -e $DEP_OK
        else
            DEP_PASS=false
            DEP_NEED+=('pywebkitgtk')
            echo -e $DEP_NO
        fi
    fi
    
    if [ ! "$DEP_PASS" ];
    then
        echo -e "\n${RED}Warning!${RESET}: One or more dependencies are not installed on your system.  The Smartkeg software may act erroneously without the required libraries.  Please ensure they are installed before attempting to execute the Smartkeg Consumption Monitoring System."
        echo -e "Would you like to install these dependencies now? (Y/n): "
        read response

        if [ "$response" == "y" ] || [ "$response" == "Y" ];
        then
            echo -e "\n${BLUE}=>${RESET} Installing Dependencies\n"
            echo -e "\tInstalling ${DEP_NEED[@]}"
            sudo $PKG_MGR $PKG_INSTALL ${DEP_NEED[@]}
        fi
    fi
fi

if ! echo $@ | grep -e $nodb > /dev/null;
then
    echo -e "\n${BLUE}=>${RESET} Configuring Database\n"
    echo -ne "\tDatabase User: "

    read user

    echo -ne "\t"
    mysql -u $user -p -e "CREATE USER smartkeg IDENTIFIED BY 'Isingthepraisesofbeer!'; source static/sql/build.sql; source static/sql/data.sql;"

    echo -e "\tCreated user 'smartkeg'"
    echo -e "\tCreated tables"
    echo -e "\tInserted defaults"
fi

if echo $@ | grep -e $minify > /dev/null;
then
    echo -e "\n${BLUE}=>${RESET} Minifying CSS and JavaScript\n"
    ./minify
fi

if ! echo $@ | grep -e $nogui > /dev/null;
then
    echo -e "\n${BLUE}=>${RESET} Installing GUI Client\n"

    echo -e "\tMoving GUI file to bin path: ${BIN_PATH}"
    sudo cp gui.py $BIN_PATH/smartkeg-gui
    sudo chmod +x $BIN_PATH/smartkeg-gui
fi

echo -e "\n${BLUE}=>${RESET} Configuring System\n"
echo -e "\tInstalling smartkeg package"
sudo cp -r smartkeg/ $PKG_PATH/

echo -e "\tMoving executable to bin path: ${BIN_PATH}"
sudo cp main.py $BIN_PATH/smartkeg
sudo chmod +x $BIN_PATH/smartkeg

echo -e "\tMoving configuration files to config path: ${CFG_PATH}"
sudo mkdir -p $CFG_PATH
sudo cp etc/config.json $CFG_PATH

echo -e "\tMoving server files to server path: ${SRV_PATH}"
sudo mkdir -p $SRV_PATH
sudo cp -r srv/* $SRV_PATH

echo -e "\tCreating log file directory: ${LOG_PATH}"
sudo mkdir -p $LOG_PATH

echo -e "\tCreating service files"
sudo echo -e "[Unit]\nDescription=Smartkeg\nRequires=mysqld.service\n\n[Service]\nType=simple\nExecStart=/usr/bin/env python2 /usr/local/bin/smartkeg\n\n[Install]\nWantedBy=multi-user.target" > /etc/systemd/system/smartkeg.service

echo -e "\tReload Service Daemons"
sudo systemctl daemon-reload

echo -e "\n\t${BOLD}NOTE:${RESET} To run the Smartkeg system at startup run the following:\n\t\tsudo systemctl enable smartkeg"

echo -e "\n${BOLD}Done!${RESET}"

