#!/bin/bash

PKG_PATH="/usr/lib/python3.4/site-packages"
BIN_PATH="/usr/local/bin"
SRV_PATH="/srv/smartkeg"
CFG_PATH="/etc/smartkeg"
LOG_PATH="/var/log/smartkeg"

PKG_MGR="pacman"
PKG_INSTALL="-S"
PKG_QUERY="-Qs"
PIP="pip3"

RESET="\033[0m"
BOLD="\033[1m"
RED="\033[0;31m"
GREEN="\033[0;32m"
BLUE="\033[1;34m"

DEP_OK="${GREEN}OK${RESET}"
DEP_NO="${RED}NO${RESET}"
DEP_PASS=true
DEP_NEED=()

ARGS=$@

nocheck="--no-check"
nodb="--no-db"
nogui="--no-gui"
minify="--minify"

function inargs() {
    [[ $ARGS =~ $1 ]] && return 0 || return 1
}

function checkpip() {
    # These calls require pip, unless the user builds from source.    
    if $PIP list | grep $1 > /dev/null;
    then
        echo -e $DEP_OK
        return 0
    else
        echo -e $DEP_NO
        echo -e "\t${BOLD}NOTICE:${RESET} $1 must be installed using" \
                "pip or built\n\t\tfrom source. You must complete this" \
                "step yourself."
        return 1
    fi
}

function checksys() {
    if command -v $1 > /dev/null;
    then
        echo -e $DEP_OK
    else
        echo -e $DEP_NO
    fi
}

function configure_database() {
    BUILD='static/sql/build.sql'
    DATA='static/sql/data.sql'
    
    function mysqluser() {
        # Get database configs from ./etc/config.json
        # Parsing JSON in bash would suck! Use python
        user=`python -c "from __future__ import print_function; import json; x = open('./etc/config.json','r'); print(json.load(x)['database']['user'])"`
        pass=`python -c "from __future__ import print_function; import json; x = open('./etc/config.json','r'); print(json.load(x)['database']['password'])"`
        
        mysql -u $1 -p$2 -e "CREATE USER $user IDENTIFIED BY '$pass'"
    }

    function mysqlsource() {
        mysql -u $1 -p$2 -e "source $3"
    }

    if ! inargs $nodb;
    then
        echo -e "\n${BLUE}=>${RESET} Configuring Database\n"
        echo -ne "\tDatabase User: "
        read user
        
        echo -ne "\tPassword: "
        read -s password
        
        echo -e "\tCreating user 'smartkeg'"    
        mysqluser $user $password

        echo -e "\tCreating tables"    
        mysqlsource $user $password $BUILD

        echo -e "\tInserting defaults"    
        mysqlsource $user $password $DATA
    fi
}

function configure_gui () {
    if ! inargs $nogui;
    then
        echo -e "\n${BLUE}=>${RESET} Installing GUI Client\n"

        echo -e "\tMoving GUI file to bin path: ${BIN_PATH}"
        sudo cp gui.py $BIN_PATH/smartkeg-gui
        sudo chmod +x $BIN_PATH/smartkeg-gui
    fi
}

function configure_minify() {
    if inargs $minify;
    then
        echo -e "\n${BLUE}=>${RESET} Minifying CSS and JavaScript\n"
        ./minify
    fi
}

function configure_system() {
    echo -e "\n${BLUE}=>${RESET} Configuring System\n"
    echo -e "\tInstalling smartkeg package"
    sudo cp -r smartkeg/ $PKG_PATH/

    echo -e "\tMoving executable to bin path: ${BIN_PATH}"
    sudo cp main.py $BIN_PATH/smartkeg
    sudo chmod +x $BIN_PATH/smartkeg

    echo -e "\tMoving configuration files to config path: ${CFG_PATH}"
    sudo mkdir -p $CFG_PATH
    sudo cp etc/config.json $CFG_PATH

    echo -e "\tMoving server files to server path: ${SRV_PATH}"
    sudo mkdir -p $SRV_PATH
    sudo cp -r srv/* $SRV_PATH

    echo -e "\tCreating log file directory: ${LOG_PATH}"
    sudo mkdir -p $LOG_PATH

    echo -e "\tCreating service files"
    sudo echo -e "[Unit]\nDescription=Smartkeg\nRequires=mysqld.service\n\n[Service]\nType=simple\nExecStart=/usr/bin/env python2 /usr/local/bin/smartkeg\n\n[Install]\nWantedBy=multi-user.target" > /etc/systemd/system/smartkeg.service

    echo -e "\tReload Service Daemons"
    sudo systemctl daemon-reload

    echo -e "\n\t${BOLD}NOTE:${RESET} To run the Smartkeg system at startup run the following:\n\t\tsudo systemctl enable smartkeg"
}


echo -e "\n${BOLD}Welcome to the Smartkeg build process!${RESET}"

if ! inargs $nocheck;
then
    echo -e "${BLUE}=>${RESET} Checking Dependencies\n"
    echo -ne "\tMySQL/MariaDB           "
    # MySQL/MariaDB
    if checksys mysql;
    then
        DEP_PASS=false
        DEP_NEED+=('mysql')
    fi

    # python-mysql
    echo -ne "\tmysql-connector-python  "
    if ! checkpip mysql-connector-python;
    then
        DEP_PASS=false
    fi

    # RPi.GPIO
    echo -ne "\tRPi.GPIO                "
    if ! checkpip RPi.GPIO;
    then
        DEP_PASS=false
    fi

    # qrcode
    echo -ne "\tqrcode                  "
    if ! checkpip qrcode;
    then
        DEP_PASS=false
    fi
    
    # pywebkitgtk
    if ! inargs $nogui;
    then
        echo -ne "\tpywebkitgtk             "
        if ! checkpip pywebkitgtk;
        then
            DEP_PASS=false
        fi
    fi
    
    if ! $DEP_PASS;
    then
        echo -e "\n${RED}Warning!${RESET}: One or more dependencies are not installed on your system. The Smartkeg software may act erroneously without the required libraries. Please ensure they are installed before attempting to execute the Smartkeg Consumption Monitoring System."
        echo -e "Would you like to install these dependencies now? (Y/n): "
        read response

        if [ "$response" == "y" ] || [ "$response" == "Y" ];
        then
            echo -e "\n${BLUE}=>${RESET} Installing Dependencies\n"
            echo -e "\tInstalling ${DEP_NEED[@]}"
            sudo $PKG_MGR $PKG_INSTALL ${DEP_NEED[@]}
        fi
    fi
fi


configure_database    
configure_minify
configure_gui
configure_system

echo -e "\n${BOLD}Done!${RESET}"
