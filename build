#!/bin/bash

SRC_PATH="/usr/local/src"
BIN_PATH="/usr/local/bin"

PKG_MGR="pacman"
PKG_INSTALL="-S"
PKG_QUERY="-Qs"

RESET="\033[0m"
BOLD="\033[1m"
RED="\033[0;31m"
GREEN="\033[0;32m"
BLUE="\033[1;34m"

DEP_OK="${GREEN}OK${RESET}"
DEP_NO="${RED}NO${RESET}"
DEP_PASS=true
DEP_NEED=()

nocheck="--no-check"
nodb="--no-db"
nogui="--no-gui"

echo -e "\n${BOLD}Welcome to the Smartkeg build process!${RESET}"

if [ "$1" != "$nocheck" ] && [ "$2" != "$nocheck" ] && [ "$3" != "$nocheck" ];
then
    echo -e "${BLUE}=>${RESET} Checking Dependencies\n"
    echo -ne "\tMySQL           "
    # MySQL
    if command -v mysql > /dev/null;
    then
        echo -e $DEP_OK
    else
        DEP_PASS=false
        DEP_NEED+=('mysql')
        echo -e $DEP_NO
    fi

    # MySQLdb
    echo -ne "\tMySQLdb         "
    if $PKG_MGR $PKG_QUERY mysql-python > /dev/null;
    then
        echo -e $DEP_OK
    else
        DEP_PASS=false
        DEP_NEED+=('mysql-python')
        echo -e $DEP_NO
    fi

    # RPi.GPIO
    # This also requires pip, unless the user builds from source.
    echo -ne "\tRPi.GPIO        "
    if pip2 list | grep RPi.GPIO > /dev/null;
    then
        echo -e $DEP_OK
    else
        DEP_PASS=false
        echo -ne $DEP_NO
        echo -e "    ${BOLD}NOTICE:${RESET} RPi.GPIO must be installed using pip or built from source.  You must complete this step yourself."
    fi

    # pywebkitgtk
    echo -ne "\tpywebkitgtk     "
    if $PKG_MGR $PKG_QUERY pywebkitgtk > /dev/null;
    then
        echo -e $DEP_OK
    else
        DEP_PASS=false
        DEP_NEED+=('pywebkitgtk')
        echo -e $DEP_NO
    fi

    if [ ! "$DEP_PASS" ];
    then
        echo -e "\n${RED}Warning!${RESET}: One or more dependencies are not installed on your system.  The Smartkeg software may act erroneously without the required libraries.  Please ensure they are installed before attempting to execute the Smartkeg Consumption Monitoring System."
        echo -e "Would you like to install these dependencies now? (Y/n): "
        read response

        if [ "$response" == "y" ] || [ "$response" == "Y" ];
        then
            echo -e "\n${BLUE}=>${RESET} Installing Dependencies\n"
            echo -e "\tInstalling ${DEP_NEED[@]}"
            sudo $PKG_MGR $PKG_INSTALL ${DEP_NEED[@]}
        fi
    fi
fi

if [ "$1" != "$nodb" ] && [ "$2" != "$nodb" ] && [ "$3" != "$nodb" ];
then
    echo -e "\n${BLUE}=>${RESET} Configuring Database\n"
    echo -ne "\tDatabase User: "

    read user

    echo -ne "\t"
    mysql -u $user -p -e "CREATE USER smartkeg IDENTIFIED BY 'Isingthepraisesofbeer!'; source smartkeg/static/sql/build.sql; source smartkeg/static/sql/data.sql;"

    echo -e "\tCreated user 'smartkeg'"
    echo -e "\tCreated tables"
    echo -e "\tInserted defaults"
fi

if [ "$1" != "$nogui" ] && [ "$2" != "$nogui" ] && [ "$3" != "$nogui" ];
then
    echo -e "\n${BLUE}=>${RESET} Installing GUI Client\n"

    sudo cp smartkeg/gui.py $BIN_PATH/smartkeg
    chmod +x $BIN_PATH/smartkeg
fi

echo -e "\n${BLUE}=>${RESET} Configuring System\n"
echo -e "\tMove files"
sudo cp -r smartkeg/ $SRC_PATH/

echo -e "\tCreate service files"
sudo echo -e "[Unit]\nDescription=Smartkeg\nRequires=mysqld.service\n\n[Service]\nType=simple\nExecStart=/usr/bin/env python2 /usr/local/src/smartkeg/main.py\n\n[Install]\nWantedBy=multi-user.target" > /etc/systemd/system/smartkeg.service
sudo echo -e "[Unit]\nDescription=Smartkeg Web Server\nRequires=smartkeg.service\n\n[Service]\nType=simple\nExecStart=/usr/bin/env python2 /usr/local/src/smartkeg/http_server.py\n\n[Install]\nWantedBy=multi-user.target" > /etc/systemd/system/smartkeg-server.service

echo -e "\tReload Service Daemons"
sudo systemctl daemon-reload

echo -e "\n${BOLD}Done!${RESET}"

